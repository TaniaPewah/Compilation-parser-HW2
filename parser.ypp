%{

	#include <iostream>
	#include <stdlib.h>
    #include "output.hpp"
	using namespace std;
	using namespace output;

	extern int yylex();

	int yyerror(const char * message);
%}


%token BOOL VOID INT BYTE B
%token TRUE FALSE
%token WHILE RETURN
%token BREAK CONTINUE
%token SC COMMA
%token ID
%token STRING NUM


%token ASSIGN

%nonassoc NO_ELSE
%nonassoc ELSE
%right IF

%right BINOP

%left NOT
%right AND
%right OR

%right RELOP

%left LPAREN RPAREN LBRACE RBRACE

%%

Program :  Type VOID {  cout << " 3 here \n"; }SC { cout << " new rule here \n"; };




Type	: INT { cout << " 1 here \n";  }
		| BYTE { printProductionRule(32); }
		| BOOL { printProductionRule(33); }
		;


%%

int main()
{
	yyparse();
}

int yyerror(const char * message)
{
	cout<<"Parse error: "<<message<<endl;
	exit(0);
}
